// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2_VMS_TEST.Data;

#nullable disable

namespace WebApplication2_VMS_TEST.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.DailyActivityModel", b =>
                {
                    b.Property<int>("DailyActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyActivityId"));

                    b.Property<decimal>("AmountOfFuel")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FuelCost")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("FuelFilled")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MaintenanceExpense")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("OdometerReading")
                        .HasColumnType("int");

                    b.Property<decimal>("RunningHours")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("DailyActivityId");

                    b.HasIndex("VehicleId");

                    b.ToTable("DailyActivities");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.MaintenanceExpenseModel", b =>
                {
                    b.Property<int>("MaintenanceExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceExpenseId"));

                    b.Property<decimal>("ExpenseAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceExpenseId");

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceExpenses");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.VehicleModel", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<decimal>("FuelAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("FuelCapacity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsSmartVehicle")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastServiceCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("LastServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OdometerReading")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.DailyActivityModel", b =>
                {
                    b.HasOne("WebApplication2_VMS_TEST.Models.VehicleModel", "Vehicle")
                        .WithMany("DailyActivities")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.MaintenanceExpenseModel", b =>
                {
                    b.HasOne("WebApplication2_VMS_TEST.Models.VehicleModel", "Vehicle")
                        .WithMany("MaintenanceExpenses")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.VehicleModel", b =>
                {
                    b.HasOne("WebApplication2_VMS_TEST.Models.UserModel", "Users")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.UserModel", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("WebApplication2_VMS_TEST.Models.VehicleModel", b =>
                {
                    b.Navigation("DailyActivities");

                    b.Navigation("MaintenanceExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
